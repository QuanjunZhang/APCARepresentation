--- patch1-Time-26-Hercules.buggy	2020-11-06 20:14:51.000000000 +0800
+++ patch1-Time-26-Hercules.fixed	2020-11-06 20:17:46.000000000 +0800
@@ -433,6 +433,6 @@
             } else {
                long localInstant = iZone.convertUTCToLocal(instant);
                localInstant = iField.add(localInstant, value);
-               return iZone.convertLocalToUTC(localInstant, false);
+               return iZone.convertLocalToUTC(localInstant, false, instant);
             }
         }
@@ -445,6 +445,6 @@
             } else {
                long localInstant = iZone.convertUTCToLocal(instant);
                localInstant = iField.add(localInstant, value);
-               return iZone.convertLocalToUTC(localInstant, false);
+               return iZone.convertLocalToUTC(localInstant, false, instant);
             }
         }
@@ -457,6 +457,6 @@
             } else {
                 long localInstant = iZone.convertUTCToLocal(instant);
                 localInstant = iField.addWrapField(localInstant, value);
-                return iZone.convertLocalToUTC(localInstant, false);
+                return iZone.convertLocalToUTC(localInstant, false, instant);
             }
         }
@@ -464,7 +464,7 @@
         public long set(long instant, int value) {
             long localInstant = iZone.convertUTCToLocal(instant);
             localInstant = iField.set(localInstant, value);
-            long result = iZone.convertLocalToUTC(localInstant, false);
+            long result = iZone.convertLocalToUTC(localInstant, false, instant);
             if (get(result) != value) {
                 throw new IllegalFieldValueException(iField.getType(), new Integer(value),
                     "Illegal instant due to time zone offset transition: " +
@@ -478,7 +478,7 @@
             // cannot verify that new value stuck because set may be lenient
             long localInstant = iZone.convertUTCToLocal(instant);
             localInstant = iField.set(localInstant, text, locale);
-            return iZone.convertLocalToUTC(localInstant, false);
+            return iZone.convertLocalToUTC(localInstant, false, instant);
         }
 
         public int getDifference(long minuendInstant, long subtrahendInstant) {
@@ -525,6 +525,6 @@
             } else {
                 long localInstant = iZone.convertUTCToLocal(instant);
                 localInstant = iField.roundFloor(localInstant);
-                return iZone.convertLocalToUTC(localInstant, false);
+                return iZone.convertLocalToUTC(localInstant, false, instant);
             }
         }
@@ -537,7 +537,7 @@
             } else {
                 long localInstant = iZone.convertUTCToLocal(instant);
                 localInstant = iField.roundCeiling(localInstant);
-                return iZone.convertLocalToUTC(localInstant, false);
+                return iZone.convertLocalToUTC(localInstant, false, instant);
             }
         } 
