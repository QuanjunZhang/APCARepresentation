--- a/src/java/org/apache/commons/cli/PosixParser.java
+++ b/src/java/org/apache/commons/cli/PosixParser.java
@@ -38,6 +38,7 @@ public class PosixParser extends Parser
     private boolean eatTheRest;
 
     /** holder for the current option */
+    private Option currentOption;
 
     /** the command line Options */
     private Options options;
@@ -113,10 +114,11 @@ public class PosixParser extends Parser
 
                 if (!options.hasOption(opt))
                 {
-                    processNonOptionToken(token);
+                    processNonOptionToken(token, stopAtNonOption);
                 }
                 else
                 {
+                    currentOption = options.getOption(opt);
                     
                     tokens.add(opt);
                     if (pos != -1)
@@ -143,13 +145,9 @@ public class PosixParser extends Parser
                     burstToken(token, stopAtNonOption);
                 }
             }
-            else if (stopAtNonOption)
-            {
-                processNonOptionToken(token);
-            }
             else
             {
-                tokens.add(token);
+                processNonOptionToken(token, stopAtNonOption);
             }
 
             gobble(iter);
@@ -181,10 +179,13 @@ public class PosixParser extends Parser
      *
      * @param value The current token
      */
-    private void processNonOptionToken(String value)
+    private void processNonOptionToken(String value, boolean stopAtNonOption)
     {
+        if (stopAtNonOption && (currentOption == null || !currentOption.hasArg()))
+        {
             eatTheRest = true;
             tokens.add("--");
+        }
 
         tokens.add(value);
     }
@@ -208,6 +209,10 @@ public class PosixParser extends Parser
             eatTheRest = true;
         }
 
+        if (options.hasOption(token))
+        {
+            currentOption = options.getOption(token);
+        }
 
         tokens.add(token);
     }
@@ -240,7 +245,6 @@ public class PosixParser extends Parser
      */
     protected void burstToken(String token, boolean stopAtNonOption)
     {
-        Option currentOption;
         for (int i = 1; i < token.length(); i++)
         {
             String ch = String.valueOf(token.charAt(i));
@@ -259,7 +263,7 @@ public class PosixParser extends Parser
             }
             else if (stopAtNonOption)
             {
-                processNonOptionToken(token.substring(i));
+                processNonOptionToken(token.substring(i), true);
                 break;
             }
             else
