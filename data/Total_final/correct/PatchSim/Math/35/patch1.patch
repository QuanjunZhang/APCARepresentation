--- /Users/haoye.tian/Downloads/ODS/data/PS/correct/Patch199/Math_35/ElitisticListPopulation/Math_35_ElitisticListPopulation_s.java	2020-08-13 10:38:58.000000000 +0200
+++ /Users/haoye.tian/Downloads/ODS/data/PS/correct/Patch199/Math_35/ElitisticListPopulation/Math_35_ElitisticListPopulation_t.java	2020-08-13 10:38:58.000000000 +0200
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.apache.commons.math3.genetics;
+package org.apache.commons.math3.genetics;import  org.apache.commons.math3.exception.OutOfRangeException;import  org.apache.commons.math3.exception.OutOfRangeException;
 
 import java.util.Collections;
 import java.util.List;
@@ -49,6 +49,8 @@
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
         this.elitismRate = elitismRate;
+ 	if (elitismRate>(double)1.0){throw new OutOfRangeException(null,null,null);}
+ 	if (elitismRate<(double)0.0){throw new OutOfRangeException(null,null,null);}
     }
 
     /**
@@ -63,6 +65,10 @@
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
         this.elitismRate = elitismRate;
+ 	if (elitismRate>(double)1.0){throw new OutOfRangeException(null,null,null);}
+ 	if (elitismRate<(double)0.0){throw new OutOfRangeException(null,null,null);}
+
+
     }
 
     /**
