--- /Users/haoye.tian/Documents/University/data/PatchCollecting/jKali/Incorrect/Math/patch1-Math-80-jKali.buggy	2020-11-02 19:13:13.000000000 +0100
+++ /Users/haoye.tian/Documents/University/data/PatchCollecting/jKali/Incorrect/Math/patch1-Math-80-jKali.fixed	2020-11-02 19:13:13.000000000 +0100
@@ -1130,20 +1130,21 @@
      * @return true if qd array was flipped
      */
     private boolean flipIfWarranted(final int n, final int step) {
-        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
-            int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
-                }
-                j -= 4;
-            }
+ 		if ((1.5 * (work[pingPong])) < (work[((4 * (n - 1)) + (pingPong))])) {
+ 
+ 			int j = (4 * n) - 1;
+
+
+
+
+
+
+
+
             return true;
         }
         return false;
+
     }
 
     /**
